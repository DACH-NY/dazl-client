// Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: com/daml/ledger/api/v1/version_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParticipantDeduplicationSupport int32

const (
	ParticipantDeduplicationSupport_PARTICIPANT_DEDUPLICATION_NOT_SUPPORTED ParticipantDeduplicationSupport = 0
	ParticipantDeduplicationSupport_PARTICIPANT_DEDUPLICATION_PARALLEL_ONLY ParticipantDeduplicationSupport = 1
	ParticipantDeduplicationSupport_PARTICIPANT_DEDUPLICATION_SUPPORTED     ParticipantDeduplicationSupport = 2
)

// Enum value maps for ParticipantDeduplicationSupport.
var (
	ParticipantDeduplicationSupport_name = map[int32]string{
		0: "PARTICIPANT_DEDUPLICATION_NOT_SUPPORTED",
		1: "PARTICIPANT_DEDUPLICATION_PARALLEL_ONLY",
		2: "PARTICIPANT_DEDUPLICATION_SUPPORTED",
	}
	ParticipantDeduplicationSupport_value = map[string]int32{
		"PARTICIPANT_DEDUPLICATION_NOT_SUPPORTED": 0,
		"PARTICIPANT_DEDUPLICATION_PARALLEL_ONLY": 1,
		"PARTICIPANT_DEDUPLICATION_SUPPORTED":     2,
	}
)

func (x ParticipantDeduplicationSupport) Enum() *ParticipantDeduplicationSupport {
	p := new(ParticipantDeduplicationSupport)
	*p = x
	return p
}

func (x ParticipantDeduplicationSupport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantDeduplicationSupport) Descriptor() protoreflect.EnumDescriptor {
	return file_com_daml_ledger_api_v1_version_service_proto_enumTypes[0].Descriptor()
}

func (ParticipantDeduplicationSupport) Type() protoreflect.EnumType {
	return &file_com_daml_ledger_api_v1_version_service_proto_enumTypes[0]
}

func (x ParticipantDeduplicationSupport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantDeduplicationSupport.Descriptor instead.
func (ParticipantDeduplicationSupport) EnumDescriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{0}
}

type DeduplicationPeriodSupport_OffsetSupport int32

const (
	DeduplicationPeriodSupport_OFFSET_NATIVE_SUPPORT      DeduplicationPeriodSupport_OffsetSupport = 0
	DeduplicationPeriodSupport_OFFSET_CONVERT_TO_DURATION DeduplicationPeriodSupport_OffsetSupport = 1
	DeduplicationPeriodSupport_OFFSET_NOT_SUPPORTED       DeduplicationPeriodSupport_OffsetSupport = 2
)

// Enum value maps for DeduplicationPeriodSupport_OffsetSupport.
var (
	DeduplicationPeriodSupport_OffsetSupport_name = map[int32]string{
		0: "OFFSET_NATIVE_SUPPORT",
		1: "OFFSET_CONVERT_TO_DURATION",
		2: "OFFSET_NOT_SUPPORTED",
	}
	DeduplicationPeriodSupport_OffsetSupport_value = map[string]int32{
		"OFFSET_NATIVE_SUPPORT":      0,
		"OFFSET_CONVERT_TO_DURATION": 1,
		"OFFSET_NOT_SUPPORTED":       2,
	}
)

func (x DeduplicationPeriodSupport_OffsetSupport) Enum() *DeduplicationPeriodSupport_OffsetSupport {
	p := new(DeduplicationPeriodSupport_OffsetSupport)
	*p = x
	return p
}

func (x DeduplicationPeriodSupport_OffsetSupport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeduplicationPeriodSupport_OffsetSupport) Descriptor() protoreflect.EnumDescriptor {
	return file_com_daml_ledger_api_v1_version_service_proto_enumTypes[1].Descriptor()
}

func (DeduplicationPeriodSupport_OffsetSupport) Type() protoreflect.EnumType {
	return &file_com_daml_ledger_api_v1_version_service_proto_enumTypes[1]
}

func (x DeduplicationPeriodSupport_OffsetSupport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeduplicationPeriodSupport_OffsetSupport.Descriptor instead.
func (DeduplicationPeriodSupport_OffsetSupport) EnumDescriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{5, 0}
}

type DeduplicationPeriodSupport_DurationSupport int32

const (
	DeduplicationPeriodSupport_DURATION_NATIVE_SUPPORT    DeduplicationPeriodSupport_DurationSupport = 0
	DeduplicationPeriodSupport_DURATION_CONVERT_TO_OFFSET DeduplicationPeriodSupport_DurationSupport = 1
)

// Enum value maps for DeduplicationPeriodSupport_DurationSupport.
var (
	DeduplicationPeriodSupport_DurationSupport_name = map[int32]string{
		0: "DURATION_NATIVE_SUPPORT",
		1: "DURATION_CONVERT_TO_OFFSET",
	}
	DeduplicationPeriodSupport_DurationSupport_value = map[string]int32{
		"DURATION_NATIVE_SUPPORT":    0,
		"DURATION_CONVERT_TO_OFFSET": 1,
	}
)

func (x DeduplicationPeriodSupport_DurationSupport) Enum() *DeduplicationPeriodSupport_DurationSupport {
	p := new(DeduplicationPeriodSupport_DurationSupport)
	*p = x
	return p
}

func (x DeduplicationPeriodSupport_DurationSupport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeduplicationPeriodSupport_DurationSupport) Descriptor() protoreflect.EnumDescriptor {
	return file_com_daml_ledger_api_v1_version_service_proto_enumTypes[2].Descriptor()
}

func (DeduplicationPeriodSupport_DurationSupport) Type() protoreflect.EnumType {
	return &file_com_daml_ledger_api_v1_version_service_proto_enumTypes[2]
}

func (x DeduplicationPeriodSupport_DurationSupport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeduplicationPeriodSupport_DurationSupport.Descriptor instead.
func (DeduplicationPeriodSupport_DurationSupport) EnumDescriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{5, 1}
}

type GetLedgerApiVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Must correspond to the ledger ID reported by the Ledger Identification Service.
	// Must be a valid LedgerString (as described in ``value.proto``).
	// Required
	LedgerId string `protobuf:"bytes,1,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
}

func (x *GetLedgerApiVersionRequest) Reset() {
	*x = GetLedgerApiVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerApiVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerApiVersionRequest) ProtoMessage() {}

func (x *GetLedgerApiVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerApiVersionRequest.ProtoReflect.Descriptor instead.
func (*GetLedgerApiVersionRequest) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetLedgerApiVersionRequest) GetLedgerId() string {
	if x != nil {
		return x.LedgerId
	}
	return ""
}

type GetLedgerApiVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The version of the ledger API.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The features supported by this Ledger API endpoint.
	//
	// Daml applications CAN use the feature descriptor on top of
	// version constraints on the Ledger API version to determine
	// whether a given Ledger API endpoint supports the features
	// required to run the application.
	//
	// See the feature descriptions themselves for the relation between
	// Ledger API versions and feature presence.
	Features *FeaturesDescriptor `protobuf:"bytes,2,opt,name=features,proto3" json:"features,omitempty"`
}

func (x *GetLedgerApiVersionResponse) Reset() {
	*x = GetLedgerApiVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLedgerApiVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLedgerApiVersionResponse) ProtoMessage() {}

func (x *GetLedgerApiVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLedgerApiVersionResponse.ProtoReflect.Descriptor instead.
func (*GetLedgerApiVersionResponse) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetLedgerApiVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetLedgerApiVersionResponse) GetFeatures() *FeaturesDescriptor {
	if x != nil {
		return x.Features
	}
	return nil
}

type FeaturesDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, then the Ledger API server supports user management.
	// It is recommended that clients query this field to gracefully adjust their behavior for
	// ledgers that do not support user management.
	UserManagement *UserManagementFeature `protobuf:"bytes,2,opt,name=user_management,json=userManagement,proto3" json:"user_management,omitempty"`
	// Features under development or features that are used
	// for ledger implementation testing purposes only.
	//
	// Daml applications SHOULD not depend on these in production.
	Experimental *ExperimentalFeatures `protobuf:"bytes,1,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Features related to command deduplication
	CommandDeduplication *CommandDeduplicationFeatures `protobuf:"bytes,3,opt,name=command_deduplication,json=commandDeduplication,proto3" json:"command_deduplication,omitempty"`
}

func (x *FeaturesDescriptor) Reset() {
	*x = FeaturesDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturesDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturesDescriptor) ProtoMessage() {}

func (x *FeaturesDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturesDescriptor.ProtoReflect.Descriptor instead.
func (*FeaturesDescriptor) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{2}
}

func (x *FeaturesDescriptor) GetUserManagement() *UserManagementFeature {
	if x != nil {
		return x.UserManagement
	}
	return nil
}

func (x *FeaturesDescriptor) GetExperimental() *ExperimentalFeatures {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *FeaturesDescriptor) GetCommandDeduplication() *CommandDeduplicationFeatures {
	if x != nil {
		return x.CommandDeduplication
	}
	return nil
}

// Used to signal the presence of the user management service.
// Defined as a message to enable future addition of individual per-service features.
type UserManagementFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserManagementFeature) Reset() {
	*x = UserManagementFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserManagementFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserManagementFeature) ProtoMessage() {}

func (x *UserManagementFeature) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserManagementFeature.ProtoReflect.Descriptor instead.
func (*UserManagementFeature) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{3}
}

type CommandDeduplicationFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeduplicationPeriodSupport      *DeduplicationPeriodSupport     `protobuf:"bytes,1,opt,name=deduplication_period_support,json=deduplicationPeriodSupport,proto3" json:"deduplication_period_support,omitempty"`
	ParticipantDeduplicationSupport ParticipantDeduplicationSupport `protobuf:"varint,2,opt,name=participant_deduplication_support,json=participantDeduplicationSupport,proto3,enum=com.daml.ledger.api.v1.ParticipantDeduplicationSupport" json:"participant_deduplication_support,omitempty"`
}

func (x *CommandDeduplicationFeatures) Reset() {
	*x = CommandDeduplicationFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDeduplicationFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDeduplicationFeatures) ProtoMessage() {}

func (x *CommandDeduplicationFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDeduplicationFeatures.ProtoReflect.Descriptor instead.
func (*CommandDeduplicationFeatures) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{4}
}

func (x *CommandDeduplicationFeatures) GetDeduplicationPeriodSupport() *DeduplicationPeriodSupport {
	if x != nil {
		return x.DeduplicationPeriodSupport
	}
	return nil
}

func (x *CommandDeduplicationFeatures) GetParticipantDeduplicationSupport() ParticipantDeduplicationSupport {
	if x != nil {
		return x.ParticipantDeduplicationSupport
	}
	return ParticipantDeduplicationSupport_PARTICIPANT_DEDUPLICATION_NOT_SUPPORTED
}

type DeduplicationPeriodSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffsetSupport   DeduplicationPeriodSupport_OffsetSupport   `protobuf:"varint,1,opt,name=offset_support,json=offsetSupport,proto3,enum=com.daml.ledger.api.v1.DeduplicationPeriodSupport_OffsetSupport" json:"offset_support,omitempty"`
	DurationSupport DeduplicationPeriodSupport_DurationSupport `protobuf:"varint,2,opt,name=duration_support,json=durationSupport,proto3,enum=com.daml.ledger.api.v1.DeduplicationPeriodSupport_DurationSupport" json:"duration_support,omitempty"`
}

func (x *DeduplicationPeriodSupport) Reset() {
	*x = DeduplicationPeriodSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeduplicationPeriodSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeduplicationPeriodSupport) ProtoMessage() {}

func (x *DeduplicationPeriodSupport) ProtoReflect() protoreflect.Message {
	mi := &file_com_daml_ledger_api_v1_version_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeduplicationPeriodSupport.ProtoReflect.Descriptor instead.
func (*DeduplicationPeriodSupport) Descriptor() ([]byte, []int) {
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeduplicationPeriodSupport) GetOffsetSupport() DeduplicationPeriodSupport_OffsetSupport {
	if x != nil {
		return x.OffsetSupport
	}
	return DeduplicationPeriodSupport_OFFSET_NATIVE_SUPPORT
}

func (x *DeduplicationPeriodSupport) GetDurationSupport() DeduplicationPeriodSupport_DurationSupport {
	if x != nil {
		return x.DurationSupport
	}
	return DeduplicationPeriodSupport_DURATION_NATIVE_SUPPORT
}

var File_com_daml_ledger_api_v1_version_service_proto protoreflect.FileDescriptor

var file_com_daml_ledger_api_v1_version_service_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16,
	0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c,
	0x2f, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x12, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x56, 0x0a,
	0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d,
	0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x69, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d,
	0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x1c,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x74, 0x0a, 0x1c,
	0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x64, 0x75,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x1a, 0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x21, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x1f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xaa, 0x03, 0x0a, 0x1a, 0x44, 0x65, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x67, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x6d, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x64, 0x0a, 0x0d, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x19, 0x0a, 0x15, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x41, 0x54, 0x49, 0x56,
	0x45, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4f,
	0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x5f, 0x54, 0x4f,
	0x5f, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f,
	0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0x4e, 0x0a, 0x0f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x55, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x41, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x50,
	0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x55, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x46, 0x46,
	0x53, 0x45, 0x54, 0x10, 0x01, 0x2a, 0xa4, 0x01, 0x0a, 0x1f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x44, 0x55, 0x50, 0x4c, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2b, 0x0a, 0x27, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4c, 0x4c, 0x45, 0x4c, 0x5f, 0x4f, 0x4e, 0x4c,
	0x59, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49, 0x50, 0x41,
	0x4e, 0x54, 0x5f, 0x44, 0x45, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0x90, 0x01, 0x0a,
	0x0e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x7e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d,
	0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x41, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x92, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x61, 0x6d, 0x6c, 0x2e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x18, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x5a, 0x45, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x64,
	0x61, 0x7a, 0x6c, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x37, 0x2f, 0x67, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61, 0x6d, 0x6c, 0x2f, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0xaa, 0x02, 0x16, 0x43, 0x6f,
	0x6d, 0x2e, 0x44, 0x61, 0x6d, 0x6c, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x70,
	0x69, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_daml_ledger_api_v1_version_service_proto_rawDescOnce sync.Once
	file_com_daml_ledger_api_v1_version_service_proto_rawDescData = file_com_daml_ledger_api_v1_version_service_proto_rawDesc
)

func file_com_daml_ledger_api_v1_version_service_proto_rawDescGZIP() []byte {
	file_com_daml_ledger_api_v1_version_service_proto_rawDescOnce.Do(func() {
		file_com_daml_ledger_api_v1_version_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_daml_ledger_api_v1_version_service_proto_rawDescData)
	})
	return file_com_daml_ledger_api_v1_version_service_proto_rawDescData
}

var file_com_daml_ledger_api_v1_version_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_com_daml_ledger_api_v1_version_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_com_daml_ledger_api_v1_version_service_proto_goTypes = []interface{}{
	(ParticipantDeduplicationSupport)(0),            // 0: com.daml.ledger.api.v1.ParticipantDeduplicationSupport
	(DeduplicationPeriodSupport_OffsetSupport)(0),   // 1: com.daml.ledger.api.v1.DeduplicationPeriodSupport.OffsetSupport
	(DeduplicationPeriodSupport_DurationSupport)(0), // 2: com.daml.ledger.api.v1.DeduplicationPeriodSupport.DurationSupport
	(*GetLedgerApiVersionRequest)(nil),              // 3: com.daml.ledger.api.v1.GetLedgerApiVersionRequest
	(*GetLedgerApiVersionResponse)(nil),             // 4: com.daml.ledger.api.v1.GetLedgerApiVersionResponse
	(*FeaturesDescriptor)(nil),                      // 5: com.daml.ledger.api.v1.FeaturesDescriptor
	(*UserManagementFeature)(nil),                   // 6: com.daml.ledger.api.v1.UserManagementFeature
	(*CommandDeduplicationFeatures)(nil),            // 7: com.daml.ledger.api.v1.CommandDeduplicationFeatures
	(*DeduplicationPeriodSupport)(nil),              // 8: com.daml.ledger.api.v1.DeduplicationPeriodSupport
	(*ExperimentalFeatures)(nil),                    // 9: com.daml.ledger.api.v1.ExperimentalFeatures
}
var file_com_daml_ledger_api_v1_version_service_proto_depIdxs = []int32{
	5, // 0: com.daml.ledger.api.v1.GetLedgerApiVersionResponse.features:type_name -> com.daml.ledger.api.v1.FeaturesDescriptor
	6, // 1: com.daml.ledger.api.v1.FeaturesDescriptor.user_management:type_name -> com.daml.ledger.api.v1.UserManagementFeature
	9, // 2: com.daml.ledger.api.v1.FeaturesDescriptor.experimental:type_name -> com.daml.ledger.api.v1.ExperimentalFeatures
	7, // 3: com.daml.ledger.api.v1.FeaturesDescriptor.command_deduplication:type_name -> com.daml.ledger.api.v1.CommandDeduplicationFeatures
	8, // 4: com.daml.ledger.api.v1.CommandDeduplicationFeatures.deduplication_period_support:type_name -> com.daml.ledger.api.v1.DeduplicationPeriodSupport
	0, // 5: com.daml.ledger.api.v1.CommandDeduplicationFeatures.participant_deduplication_support:type_name -> com.daml.ledger.api.v1.ParticipantDeduplicationSupport
	1, // 6: com.daml.ledger.api.v1.DeduplicationPeriodSupport.offset_support:type_name -> com.daml.ledger.api.v1.DeduplicationPeriodSupport.OffsetSupport
	2, // 7: com.daml.ledger.api.v1.DeduplicationPeriodSupport.duration_support:type_name -> com.daml.ledger.api.v1.DeduplicationPeriodSupport.DurationSupport
	3, // 8: com.daml.ledger.api.v1.VersionService.GetLedgerApiVersion:input_type -> com.daml.ledger.api.v1.GetLedgerApiVersionRequest
	4, // 9: com.daml.ledger.api.v1.VersionService.GetLedgerApiVersion:output_type -> com.daml.ledger.api.v1.GetLedgerApiVersionResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_com_daml_ledger_api_v1_version_service_proto_init() }
func file_com_daml_ledger_api_v1_version_service_proto_init() {
	if File_com_daml_ledger_api_v1_version_service_proto != nil {
		return
	}
	file_com_daml_ledger_api_v1_experimental_features_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_daml_ledger_api_v1_version_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerApiVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_daml_ledger_api_v1_version_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLedgerApiVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_daml_ledger_api_v1_version_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeaturesDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_daml_ledger_api_v1_version_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserManagementFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_daml_ledger_api_v1_version_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDeduplicationFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_daml_ledger_api_v1_version_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeduplicationPeriodSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_daml_ledger_api_v1_version_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_daml_ledger_api_v1_version_service_proto_goTypes,
		DependencyIndexes: file_com_daml_ledger_api_v1_version_service_proto_depIdxs,
		EnumInfos:         file_com_daml_ledger_api_v1_version_service_proto_enumTypes,
		MessageInfos:      file_com_daml_ledger_api_v1_version_service_proto_msgTypes,
	}.Build()
	File_com_daml_ledger_api_v1_version_service_proto = out.File
	file_com_daml_ledger_api_v1_version_service_proto_rawDesc = nil
	file_com_daml_ledger_api_v1_version_service_proto_goTypes = nil
	file_com_daml_ledger_api_v1_version_service_proto_depIdxs = nil
}
