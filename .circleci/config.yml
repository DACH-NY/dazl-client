version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.6.11

      # Start an SDK image alongside the tests for purposes of running the Sandbox
      - image: digitalasset/daml-sdk:1.3.0
        command: daml sandbox -a 0.0.0.0
        
    resource_class: medium+
    steps:
      - checkout
      - run:
          name: Install poetry and jq
          command: |
            curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python && \
            source $HOME/.poetry/env && \
            pip install pipenv && \
            poetry config virtualenvs.in-project true && \
            curl -LO https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && \
            chmod 755 jq-linux64 && \
            mv jq-linux64 /usr/bin/jq
      - restore_cache:
          key: daml-sdk-{{ checksum "_build/daml-install" }}-1.3.0
      - run:
          command: _build/daml-install 1.3.0
      - save_cache:
          key: daml-sdk-{{ checksum "_build/daml-install" }}-1.3.0
          paths:
            - "/home/circleci/.daml"
      - restore_cache:
          key: deps-{{ checksum "python/poetry.lock" }}
      - run:
          command: |
            export PATH=$PATH:~/.daml/bin; \
            source $HOME/.poetry/env && \
            make -C python deps
      - save_cache:
          key: deps-{{ checksum "python/poetry.lock" }}
          paths:
            - "python/.venv"
      - run:
          name: Python unit tests
          environment:
            DAZL_TEST_DAML_LEDGER_URL: http://localhost:6865
          command: |
            export PATH=$PATH:~/.daml/bin; \
            source $HOME/.poetry/env && \
            make python-test
      - run:
          name: Python integration tests
          environment:
            DAZL_TEST_DAML_LEDGER_URL: http://localhost:6865
          command: |
            export PATH=$PATH:~/.daml/bin; \
            source $HOME/.poetry/env && \
            make python-integration-test
      - run:
          name: Python packaging
          command: |
            export PATH=$PATH:~/.daml/bin; \
            source $HOME/.poetry/env && \
            make -C python package
      - store_test_results:
          path: python/test-results
  blackduck:
    docker:
      - image: rappdw/docker-java-python
    steps:
      - checkout
      - run:
          name: Install poetry and jq
          command: |
            curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python && \
            source $HOME/.poetry/env && \
            pip install pipenv && \
            poetry config virtualenvs.in-project true && \
            curl -LO https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && \
            chmod 755 jq-linux64 && \
            mv jq-linux64 /usr/bin/jq
      - run:
          name: Run Blackduck Detect
          command: |
            bash <(curl -s https://raw.githubusercontent.com/DACH-NY/security-blackduck/master/synopsys-detect) ci-build digitalasset_dazl master --logging.level.com.synopsys.integration=DEBUG --detect.python.python3=true
          working_directory: python
          

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - blackduck:
          context: blackduck
