module KitchenSink.Supplier where

import KitchenSink.SKU
import KitchenSink.Warehouse

import DA.Assert
import DA.TextMap

-- SKUState is an enum that models the various states of a supplier's SKU.
-- This should be kept an enum, as this is used to test enum support in dazl.
data SKUState = Draft | Active | Retired deriving (Eq, Show)

-- Item represents a thing that a consumer might want to purchase.
template Item
  with
    supplier : Party
    sku : Text
    publicParty : Party
    description : Text
    metadata : TextMap Text
    state : SKUState
  where
    signatory supplier
    observer publicParty
    key SKU with .. : SKU
    maintainer key.supplier

    controller supplier can
      Remove : ()
        do
          assertEq state Draft

      nonconsuming Activate : ContractId Item
        do
          if state == Retired then
            return self
          else do
            archive self
            create this with state = Retired

      nonconsuming RetireOrRemove : Either () (ContractId Item)
        do
          case state of
            Draft -> Left <$> archive self
            Active -> do
              archive self
              Right <$> create this with state = Retired
            Retired -> Right <$> pure self

      nonconsuming CreateShipment : ContractId SupplierDelivery
        with
          warehouse : Party
          quantity : Int
        do
          create SupplierDelivery with sku = SKU with .. ; ..


-- SupplierDelivery 
template SupplierDelivery
  with
    warehouse : Party
    sku : SKU
    quantity : Int
  where
    signatory sku.supplier
    observer warehouse
    
    controller warehouse can
      Accept : ContractId WarehouseStock
        do
          addStock warehouse sku quantity

      Reject : ContractId ReturnedInventory
        with
          reason : Text
        do
          create ReturnedInventory with ..


-- ReturnedInventory
template ReturnedInventory
  with
    warehouse : Party
    sku : SKU
    quantity : Int
    reason : Text
  where
    signatory warehouse
    observer sku.supplier

    controller sku.supplier can
      Dispose : ()
        do
          pure ()
